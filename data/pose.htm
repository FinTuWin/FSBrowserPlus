<!-- source: 
  https://javascript.info/websocket
  https://www.w3schools.com/howto/howto_js_rangeslider.asp
-->
<!DOCTYPE html>
<html>

<head>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <style>
    .tbl {
      width: 100%;
    }

    .center {
      margin: auto;
      width: 60%;
    }

    .btn {
      background-color: #3ad13f;
      border: none;
      color: black;
      padding: 20px 40px;
      font-size: 36px;
      text-align: center;
      text-decoration: none;
      display: inline-block;
      margin: 40px auto;
      cursor: pointer;
      border-radius: 30px;
      opacity: 0.7;
      transition: 0.3s;
    }

    .btn:hover {
      opacity: 1
    }

    .slider {
      -webkit-appearance: none;
      width: 300px;
      height: 30px;
      background: #d3d3d3;
      outline: none;
      opacity: 0.7;
      -webkit-transition: .2s;
      transition: opacity .2s;
    }

    .slider:hover {
      opacity: 1;
    }

    .slider::-webkit-slider-thumb {
      -webkit-appearance: none;
      appearance: none;
      width: 30px;
      height: 30px;
      background: #3273ff;
      cursor: pointer;
    }

    .slider::-moz-range-thumb {
      width: 30px;
      height: 30px;
      background: #3273ff;
      cursor: pointer;
    }
  </style>
</head>

<body>

  <h1>Robot Cat Pose Design</h1>

  <table class="tbl">
    <tr>
      <td>
        <br>
        <h2>Left Front Leg</h2>
        Joint 2<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo1"><br>
        Joint 1<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo0"><br>
        <h2>Left Back Leg</h2>
        Joint 1<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo2"><br>
        Joint 2<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo3"><br>
        Joint 3<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo4"><br>
      </td>
      <td>
        <h2>Head</h2>
        Nod<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo6"><br>
        Turn<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo5"><br>
        <div class="center">
          <button class="btn" id="restBtn">Rest</button>
        </div>
        <h2>Tail</h2>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo10"><br>
      </td>
      <td>
        <h2>Right Front Leg</h2>
        Joint 2<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo14"><br>
        Joint 1<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo15"><br>
        <h2>Right Back Leg</h2>
        Joint 1<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo13"><br>
        Joint 2<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo12"><br>
        Joint 3<br>
        <input type="range" min="140" max="580" value="360" class="slider" id="servo11"><br>
      </td>
    </tr>
  </table>

  <div>
    <p>Output: <span id="output"></span></p>
  </div>

  <div id="messages"></div>

  <script>
    var url = 'ws://' + location.host + '/ws';
    var socket = undefined;
    var sendingTimestamp = undefined;
    var isConnected = false;

    var restBtn = document.getElementById("restBtn");
    var servo0 = document.getElementById("servo0");
    var servo1 = document.getElementById("servo1");
    var servo2 = document.getElementById("servo2");
    var servo3 = document.getElementById("servo3");
    var servo4 = document.getElementById("servo4");
    var servo5 = document.getElementById("servo5");
    var servo6 = document.getElementById("servo6");
    var servo10 = document.getElementById("servo10");
    var servo11 = document.getElementById("servo11");
    var servo12 = document.getElementById("servo12");
    var servo13 = document.getElementById("servo13");
    var servo14 = document.getElementById("servo14");
    var servo15 = document.getElementById("servo15");
    var output = document.getElementById("output");

    // show message in div#messages
    function showMessage(message) {
      var messageElem = document.createElement('div');
      messageElem.textContent = message;
      document.getElementById('messages').prepend(messageElem);
    }

    function newSocket() {
      socket = new WebSocket(url);
      // handle incoming messages
      socket.onmessage = function (event) {
        if (!isConnected) {
          isConnected = true;
        }
        showMessage(event.data);
      };

      socket.onclose = function (event) {
        socket = undefined;
        isConnected = false;
        sendingTimestamp = undefined;
        showMessage("[Closed]" + event.code);
      };

      socket.onerror = function (err) {
        socket.close();
        showMessage('[Error]' + err.message);
      };
    }

    function toHex(value) {
      return parseInt(value).toString(16).padStart(3, '0');
    }

    function sendMessage(outgoingMessage) {
      output.innerHTML = outgoingMessage;
      if (socket) {
        if (isConnected) {
          if ((!sendingTimestamp) || ((Date.now() - sendingTimestamp) > 1000)) {
            sendingTimestamp = Date.now();
            socket.send(outgoingMessage);
          }
        }
      } else {
        newSocket();
      }
    }

    restBtn.onclick = function (event) {
      sendMessage("PCA9685ALL:0:000000000000000000000000000000000000000000000000");
    }

    function sendPose() {
      var outgoingMessage = "PCA9685ALL:0:"
        + toHex(servo0.value)
        + toHex(servo1.value)
        + toHex(servo2.value)
        + toHex(servo3.value)
        + toHex(servo4.value)
        + toHex(servo5.value)
        + toHex(servo6.value)
        + toHex(0)
        + toHex(0)
        + toHex(0)
        + toHex(servo10.value)
        + toHex(servo11.value)
        + toHex(servo12.value)
        + toHex(servo13.value)
        + toHex(servo14.value)
        + toHex(servo15.value);
      sendMessage(outgoingMessage);
    }
    servo0.oninput = sendPose;
    servo1.oninput = sendPose;
    servo2.oninput = sendPose;
    servo3.oninput = sendPose;
    servo4.oninput = sendPose;
    servo5.oninput = sendPose;
    servo6.oninput = sendPose;
    servo10.oninput = sendPose;
    servo11.oninput = sendPose;
    servo12.oninput = sendPose;
    servo13.oninput = sendPose;
    servo14.oninput = sendPose;
    servo15.oninput = sendPose;

    newSocket();
  </script>

</body>

</html>